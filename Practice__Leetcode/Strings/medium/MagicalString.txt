class Solution {
public:
    int magicalString(int n) {
        string s="0122";
        
        int i=3,cnt=0;
      
        while(i<=n){
            s.append(s[i]-'0',i&1?'1':'2');
            i++;
        }
        i=0;
        while(i<=n){
            if(s[i]=='1'){
                cnt++;
            }
            i++;
        }
        
      
           return cnt; 
      
    }
};

Faster than Above 

class Solution {
public:
    int magicalString(int n) {
        int j=2,i=3,k,cnt=0;
        string s="122";
     if(n<=3){
         return 1;
     }
        while(i<n){
            int p=s[j]-'0';
            if(j%2){
                for( k=0;k<p;k++){
                    s.push_back('2');
                }
              
            }
            else{
                  for( k=0;k<p;k++){
                    s.push_back('1');
                }
           
                
            }
            i+=k;
            j++;
        }
        k=0;
     while(k<n){
            if(s[k]=='1'){ 
                  cnt++;
            }
            k++;
        }
        return cnt;

    }
};