class Solution {
public:
    bool backspaceCompare(string s, string t) {
        stack<char>s1,s2;
        vector<char>v1,v2;
       for(int i=0;i<s.size();i++){
         if(s[i]!='#'){
             s1.push(s[i]);
         }
         if(i!=0){
       if((s[i]=='#') && (s1.size())){
            s1.pop();
         }
         }
       }
        for(int i=0;i<t.size();i++){
         if(t[i]!='#'){
             s2.push(t[i]);
         }
           if(i!=0){
       if((t[i]=='#') && (s2.size())){
            s2.pop();
         }
         }
       }
       while(s1.size()){

           v1.push_back(s1.top());
           s1.pop();
       }
    while(s2.size()){
           v2.push_back(s2.top());
            s2.pop();
       }
       if(v1.size()!=v2.size()){
           return false;
       }
       int i=0,j=0;
       while((i<v1.size())&&(j<v2.size())){
           if(v1[i++]!=v2[j++]){
               return false;
           }
       }
       return true;
    }
};

// better

class Solution {
public:
    bool backspaceCompare(string s, string t) {
        int n1 = s.length();
        int n2 = t.length();
        stack<int>st1;
        stack<int>st2;
        for(int i=0; i<n1; i++){
            if(s[i]=='#'){
                if(!st1.empty()){
                    st1.pop();
                }      
            }else{
                st1.push(s[i]);
            }
        }
        for(int i=0; i<n2; i++){
            if(t[i]=='#'){
                if(!st2.empty()){
                    st2.pop();
                }  
            }else{
                st2.push(t[i]);
            }
        }
        s.clear(); t.clear();
        while(!st1.empty()){
            s+=st1.top();
            st1.pop();
        }
        while(!st2.empty()){
            t+=st2.top();
            st2.pop();
        }
        if(s==t)return true;
        return false;
    }
};