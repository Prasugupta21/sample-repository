class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
        int i=0;
        while(i<nums.size()-1)
        {
            int p=nums[i];
            int j=i+1;
            while(j<nums.size())
            {
                if(p+nums[j]==target)
                {
                    ans.push_back(i);
                    ans.push_back(j);
                    break;
                }
                j++;
            }
            i++;
        }

        return ans;



// linear time

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>v;
        unordered_map<int,int>m;
        for(int i=0;i<nums.size();i++){
            
               if(m.find(nums[i])!=m.end()){
                   v.push_back(m[nums[i]]);
                   v.push_back(i);
                   break;
               }
                
              m[target-nums[i]]=i;
            }
        
        return v;
    }
};



// l
        
    }
};