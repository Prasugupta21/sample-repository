class Solution {
    vector <int>nextSmallerElement(vector<int>& h,int n){
        stack<int>s;
        s.push(-1);
        vector<int>v(n);
        for(int i=n-1;i>=0;i--){
            while((s.top()!=-1)&&(h[s.top()]>=h[i])){
                s.pop();
            }
            v[i]=s.top();
            s.push(i);
        }
        return v;
    }
     vector <int>prevSmallerElement(vector<int>& h,int n){
        stack<int>s;
        s.push(-1);
        vector<int>v(n);
        for(int i=0;i<n;i++){
            while((s.top()!=-1)&&(h[s.top()]>=h[i])){
                s.pop();
            }
            v[i]=s.top();
            s.push(i);
        }
        return v;
    }
public:
    int largestRectangleArea(vector<int>& h) {
        int n=h.size(),area=INT_MIN;
        vector<int>next(n),prev(n);
       next=nextSmallerElement(h,n);
       prev=prevSmallerElement(h,n);
       for(int i=0;i<n;i++){
           int l=h[i];
           if(next[i]==-1){
               next[i]=n;
           }
           int b=next[i]-prev[i]-1;
           int newArea=l*b;
           area=max(area,newArea);
     
       }
       return area;
    }
};