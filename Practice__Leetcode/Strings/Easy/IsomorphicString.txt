class Solution {
public:
    bool isIsomorphic(string s, string t) {
      map<char,char>m;
          map<char,char>m1;
        for(int i=0;i<s.size();i++){
            if((m.find(s[i])==m.end()) &&(m1.find(t[i])==m1.end())){
                m[s[i]]=t[i];
                m1[t[i]]=s[i];
            }
           
        else if(m[s[i]]!=t[i]){
            return false;
        }
        }
      
        
        
        return true;
    }
};


 approach 2

class Solution {
public:
    bool isIsomorphic(string s, string t) {
      map<char,char>m;
          map<char,char>m1;
        for(int i=0;i<s.size();i++){
            if((m.find(s[i])==m.end()) &&(m1.find(t[i])==m1.end())){
                m[s[i]]=t[i];
                m1[t[i]]=s[i];
            }
           
        else if(m[s[i]]!=t[i]){
            return false;
        }
        }
        m.clear();
           for(int i=0;i<s.size();i++){
            if(m.find(t[i])==m.end()){
                m[t[i]]=s[i];
            }
        else if(m[t[i]]!=s[i]){
            return false;
        }
        }
        
        return true;
    }
};