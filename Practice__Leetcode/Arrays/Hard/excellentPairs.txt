class Solution {
public:
    int countSetBits(int num,long long &cnt1,int k){
        int cnt=0;
        while(num){
           
                cnt+=num%2;
                num/=2;
            
           
        }
        if(2 * cnt >=k){
            cnt1++;
        }
        return cnt;
    }
    long long countExcellentPairs(vector<int>& nums, int k) {
       
     set<int>s;
        vector<int>bits;
        s.insert(nums.begin(),nums.end());
        long long cnt=0;
    for(auto x : s){
        
        int count =countSetBits(x,cnt ,k);
        bits.push_back(count);
    }
        sort(bits.begin(),bits.end());
        int i=0,j=bits.size()-1;
        
     
        while(i<j){
            int sum=bits[i]+bits[j];
            
            if(sum>=k){
                
               cnt+=(j-i) * 2;
                j--;
            }
            
          else{
              i++;
          }
        }
        return cnt;
    }
};