class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
        queue<pair<int,int>>q;
        int n=grid.size();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]){
                    q.push({i,j});
                }
            }
        }
        if((!(q.size()))||(q.size()==n*n)){
            return -1;
        }
    vector<pair<int,int>>dir={{1,0},{0,1},{-1,0},{0,-1}};
    int level=-1;
    while(!(q.empty())){
        level++;
        int m=q.size();
        while(m--){
            for(int i=0;i<4;i++){
                int newRow=q.front().first+dir[i].first;
                int newCol=q.front().second+dir[i].second;
                if((newRow>=n )|| (newCol>=n)||(newRow<0)||(newCol<0)||(grid[newRow][newCol])){
                    continue;
                }
                grid[newRow][newCol]=1;
                q.push({newRow,newCol});
                
            }
            q.pop();

        }
    }
return level;
    }
};