/****************************************************************
 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/
int findLength(Node*head){
    
    Node*temp=head;
    int cnt=0;
    while(temp){
        if(temp->data!=-1){
            cnt++;
        }
        temp=temp->next;
    }
    return cnt;

}
Node *deleteNode(Node *head, int i)
{
    if(!head){
        return head;
    }
    int cnt=0;

Node*temp=head;
if(!i){
    head=head->next;
   
    delete temp;
    return head;
}
int l=findLength(head);
if(l==i){
    while((cnt<=i-1)&&(temp)){
    temp=temp->next;
    cnt++;
}
}
else{
while((cnt<i-1)&&(temp)){
    temp=temp->next;
    cnt++;
}
}
if(temp){
    Node*a=temp->next;
    Node *b=a->next;
    temp->next=b;
   delete a;
}
 return head;
    
    
    // Write your code here.
}


Better 


/****************************************************************
 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/
int findLength(Node*head){
    
    Node*temp=head;
    int cnt=0;
    while(temp){
        if(temp->data!=-1){
            cnt++;
        }
        temp=temp->next;
    }
    return cnt;

}
Node *deleteNode(Node *head, int i)
{
    if(!head){
        return head;
    }
    int cnt=0;

Node*temp=head;
if(!i){
    head=head->next;
   
    delete temp;
    return head;
}
int l=findLength(head);
if(l<=i){
   return head;

}
else{
while((cnt<i-1)&&(temp)){
    temp=temp->next;
    cnt++;
}
}
if(temp){
    Node*a=temp->next;
    Node *b=a->next;
    temp->next=b;
   delete a;
}
 return head;
    
    
    // Write your code here.
}




Recursive 


/****************************************************************
 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/

Node *deleteNode(Node *head, int i)
{
   if((!head)){
    return NULL;
}
Node*temp=head;
if(!i){
    head=head->next;
   
    delete temp;
    return head;
}





Node * x=deleteNode(head->next,i-1);

temp->next=x;

 return temp;
    
    
    // Write your code here.
}

