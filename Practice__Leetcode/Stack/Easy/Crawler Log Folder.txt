class Solution {
public:
    int minOperations(vector<string>& logs) {
       int ans=0;
       for(auto x:logs){
           if(x=="../"){
               if(ans){
                   --ans;
               }

           }
           else if(x!="./"){
               ++ans;
           }


       }
return ans;
    }
};

//stack approach

class Solution {
public:
    int minOperations(vector<string>& logs) {
        stack<string>s;
        for(int i=0;i<logs.size();i++){
           if(logs[i][0]!='.' ){
               s.push(logs[i].substr(0,logs[i].size()-1));
           }
           if((logs[i][0]=='.') &&(logs[i][1]=='.')  ){
               if(s.size()){
                   s.pop();
               }
           }
        }
        return s.size();
    }
};

//same approach stack

class Solution {
public:
	int minOperations(vector<string>& logs) {

    stack<string>st;
    
    for(int i=0;i<logs.size();i++){
        
        if(logs[i][0]=='.' && logs[i][1]=='.'){
            if(!st.empty())
            st.pop();
        }else if(logs[i][0]=='.'){
            
        }else{
            st.push(logs[i]);
        }
        
    }
    
    
    return st.size();
    
}
};