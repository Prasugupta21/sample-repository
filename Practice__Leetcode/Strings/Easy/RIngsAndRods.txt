class Solution {
public:
    int countPoints(string rings) {
  
     int i=0,cnt=0;
        vector<int>red(10,0);
        vector<int>green(10,0);
        vector<int>blue(10,0);
        
        while(i<rings.size()-1){
            if(rings[i]=='R'){
                red[rings[i+1]-'0']=1;
            }
              if(rings[i]=='G'){
                green[rings[i+1]-'0']=1;
            }
              if(rings[i]=='B'){
                blue[rings[i+1]-'0']=1;
            }
            i++;
        }
        i=0;
        while(i<10){
            if((blue[i]) && (red[i]) && (green[i])){
                cnt++;
            }
            i++;
        }
        return cnt;
    }
};


Another Approach

map<int,string> m;
for(int i=0;i<=9;i++)
m[i]="ttt";
for(int i=0;i<s.size()-1;i+=2)
{
if(s[i]=='R')
m[s[i+1]-48][0]='R';
else if(s[i]=='G')
m[s[i+1]-48][1]='G';
else
m[s[i+1]-48][2]='B';
}
int ans=0;
for(auto ele:m)
{
if(ele.second[0]=='R'&&ele.second[1]=='G'&&ele.second[2]=='B')
ans++;
}
return ans;