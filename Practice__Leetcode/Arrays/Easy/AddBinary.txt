class Solution {
public:
    string addBinary(string a, string b) {
       int i=a.size()-1,j=b.size()-1;
       int carry=0;
       string ans="";
      while(carry  || i>=0  || j>=0){
          int c=0,d=0;
            if( i>=0 && a[i]=='1' ){
                 c=1;
            } 
                if(j>=0   && b[j]=='1'){
                 d=1;
            } 
            ans=to_string((c+d+carry)%2)+ans;
            carry=(c+d+carry)/2;
            i--;
            j--;

        
      }
       return ans;
    }
};


// sample solution 
class Solution {
public:
    string addBinary(string a, string b) {
        int p1 = a.size()-1;
        int p2 = b.size()-1;
        int carry=0;
        string ans="";
        while(p1>=0 || p2>=0 || carry)
        {
            if(p1>=0)
            {
                carry+=(a[p1]-'0');
                p1--;
            }
            if(p2>=0)
            {
                carry+=(b[p2]-'0');
                p2--;
            }
            ans+=(carry%2+'0');
            carry/=2;
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};